@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @* Nem változtattunk a default usertípuson, ezért nincs olyan extra adatunk, amit változtatnánk.
        <a id="manage" class="nav-link text-info" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
        *@

        @*User nevének kiírási színe más, ha admin.*@
        @if (User.IsInRole(Role.Admin))
        {
           <div class="text-warning mx-3">@UserManager.GetUserName(User)</div>
        } else
        {
          <div class="text-info mx-3">@UserManager.GetUserName(User)</div>
        }
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="btn btn-danger btn-sm">Kilépés</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Regisztráció</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Belépés</a>
    </li>
}
</ul>
